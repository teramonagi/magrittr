% Generated by roxygen2 (4.0.1): do not edit by hand
\name{compose}
\alias{compose}
\alias{l}
\alias{lambda}
\title{compose a lambda function or chain of functions.}
\usage{
compose(..., .args = NULL)

lambda(..., .args = NULL)

l(..., .args = NULL)
}
\arguments{
\item{...}{A special kind of expressions for the anonymous function(s).
The syntax is \code{symbol ~ expression}, see the examples.}

\item{.args}{a list of the form \code{list(a, b = c)} to
specify the remainder of the signature of the composed function.}
}
\value{
a function.
}
\description{
This is an alternative syntax for generating anonymous functions.
When used in pipelines, the call should be enclosed in parentheses to
force evaluation of the function generation before the left-hand side
is inserted. If multiple lambda expressions are given they will be
nested in a single global function, and evaluated as a chain. Here
each input will be available to the next lambda expression (with its
initial value).
}
\details{
\code{lambda}s have a special syntax, where the expression is defined as
\code{symbol ~ expression}. The alias \code{l} is shorthand for \code{lambda}.
Previous versions used symbol -> expression syntax, but this caused
problems with compiling packages. There is currently a warning if the
old syntax is used.
}
\examples{
compose(x ~ x^2 + 2*x)

sapply(1:10, compose(x ~ x^2))

Filter(compose(x ~ x > 0), rnorm(100))

iris \%>\%
  (compose(dfr ~ rbind(dfr \%>\% head, dfr \%>\% tail)))

1:10 \%>\%
  sin \%>\%
  (compose(x ~ {
    d <- abs(x) > 0.5
    x*d
  }))
}

